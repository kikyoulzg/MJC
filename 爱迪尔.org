这里,,记录一些我的想法.

* 信息化时代的知识如何有效记录保存(特指个人的知识,最优秀的属于全人类的知识不考虑,那种东西自然会被妥当保存的)

1.最牛逼的办法,教给别人,也就是传道受业.
2.最可靠的办法,写在纸(实体)上然后有效保管,毕竟这一做法人类用了千年(不过天灾人祸就没办法了)
3.目前流行的办法,把数据保存在电子存储器里(这个要注意数据迁移,毕竟技术老是变的,存储设备不可能一直不变,软硬件无关性越高越好,读取难度越低越好.)




当然,我觉得我还没什么值得教给别人的:)
最核心最重要的数据,写在纸上然后有效保管.最好有几个可以信任的人知道
次要的,放在本地的存储器上,备份到服务器上.(可以不止一个,都以当时最流行通用的设备存储),天朝的环境可以
一套在国内服务器，然后一个副本放国外服务器



* 知识过时
百科的很多内容都是过时或者不适用于Debian系发行版的。
Debian系的网路配置文件位于/etc/network/interfaces中，语法也和RH系的/etc/sysconfig/network-scrips不同。
另外，现在一般都用NM守护进程或systemd接管底层的网络服务，几乎不再需要手写配置文件了。

* 系统假死后的安全处理

SysRq 键组合可以由 Linux 内核解释，使用户能够在不受系统状态的影响（除 kernel panic 或 kernel 假死）下达各种底层命令。它常用来从 X-server 假死的状态下恢复或是在不损坏文件系统的前提下重新启动系统。
安全重启

在遇到系统假死后且其他方法都不奏效的时候，此方法在想要不损坏硬盘设备或丢失数据的前提下尽量完好重新启动时非常有用。 在系统假死时，可以简单地按下:
Alt+SysRq+R+S+E+I+U+B
记住斜体部分的键要在按接下来的键序列时一直按住，且接下来的几个键都要稍按按住一会儿再接着按下一个键，这样它们代表的动作都会正确执行（比如，按住 R 键 1-2 秒再接着按后面的 S 键）。如果该键序列开始并不奏效，那么就延长序列中每个按键的间隔时间再试一次。
如果有谁需要一个记住该组合键的好方法，只需记住“Raising Skinny Elephants Is Utterly Boring（举起瘦得皮包骨头似的大象真是无聊至极）”
安全关机

完成这个目的使用的键序列与重新启动除最后一个键外没有区别，按键如下：
Alt+SysRq+R+S+E+I+U+O
记住与之前相同，斜体部分的键要在按接下来的键序列时一直按住，且接下来的几个键都要稍按按住一会儿再接着按下一个键，这样它们代表的动作都会正确执行。
下面是对上述按键行为的详细描述：
Raw (从 X 取回对键盘的控制)
tErminate (结束 Nice 值为 -15 的程序，使其正常终止)
kIll (kill -9 unterminated programs 结束 Nice 值为 -9 的未终止程序)
Sync (将数据刷新到磁盘)
Unmount (全部重新挂载为只读)
reBoot（重新启动，相当于冷重启）
Off （通过 ACPI 或在旧系统中通过 APM 关闭系统。如“B”键一样，这个键相当于冷关机

* 马丹,突然觉得日常开着半角对编程是有好处的...23333    ctrl+.

* 交换capslock和ctrl建后大小写切换提示就没有了这个注销后有时会失效...怎么恢复原样来着
 gsettings set com.deepin.dde.keybinding.mediakey capslock "[]"
gsettings set com.deepin.dde.keyboard layout-options "['ctrl:swapcaps']"

* 大端法直观小端法直感
* 图灵完备性:具有无限存储能力的通用物理机器或编程语言
* wayland 和flatpak这两个项目可以研究研究
* 缺少庫的時候apt install apt-file  apt-file update apt-file search 包名 哪個切合都高下哪個
emacs替换replace-string
* export ALL_PROXY=socks5://127.0.0.1:1080 开了ss后用这个命令终端就可以科学上网了
* this is sth about git
git clone , git add , git commit , git push
git remote -v
cd remacs
git remote add rekols https://github.com/rekols/remacs
 git fetch rekols master:develop
git diff develop
git merge develop

* 2018年中国大陆可用翻墙方法：ss+pac，vpn，tor，v2ray
* 屏蔽启动信息 /etc/sysctl.d/20-quiet-printk.conf  可以cat /proc/sys/kernel/printk查看默认级别
参考kernelloglevel
* systemctl status systemd-modules-load.service 
journalctl - b _PID=409

* 3.14表示成单精度浮点数：
3的二进制：11
0.14的二进制：0.0010001111010111000010[10001111.....]
所以3.14的二进制：11.0010001111010111000010[10001111.....]
正规化：1.10010001111010111000010[10001111.....] * 2^1
舍入后：1.10010001111010111000011 * 2^1
因为指数为1，加移码127后为128，128的二进制：1000 0000

    符号位：0（表示正数）
    指数位：1000 0000
    尾数位:10010001111010111000011
3.14的单精度浮点数：0 10000000 (1)10010001111010111000011

* 再提醒一次，查 mode 的正式名稱最快的方式：
       C-h v major-mode 可以查詢目前 buffer 下 major mode 的正式名稱
        C-h v minor-mode-list 查詢目前 buffer 下所有啟動的 minor mode 的正式名稱
* 软件版本回滚 pacman -U /var/cache/pacman/pkg/package-old_version.pkg.tar.xz
* "d2667afa3535766b7382e39407cc666630dc793b"github token
* sudo adb devices
* 初始化git仓库 
echo "# MJC" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/kikyoulzg/MJC.git
git push -u origin master

